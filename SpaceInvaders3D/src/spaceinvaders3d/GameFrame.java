/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GameFrame.java
 *
 * Created on 20-Dec-2011, 7:55:39 PM
 */
package spaceinvaders3d;

/**
 *
 * @author Stephen Wen
 */
import java.awt.event.*;
public class GameFrame extends javax.swing.JFrame implements KeyListener{

    /** Creates new form GameFrame */
    public GameFrame() {
        initComponents();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagePanel1 = new spaceinvaders3d.ImagePanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        

        javax.swing.GroupLayout imagePanel1Layout = new javax.swing.GroupLayout(imagePanel1);
        imagePanel1.setLayout(imagePanel1Layout);
        imagePanel1Layout.setHorizontalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 402, Short.MAX_VALUE)
        );
        imagePanel1Layout.setVerticalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 302, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                GameFrame f = new GameFrame();
				f.setVisible(true);
				//f.imagePanel1.addKeyListener(f.imagePanel1);

				//spaceinvaders3d.Main.main(new String[0]);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public spaceinvaders3d.ImagePanel imagePanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {


        //System.out.println("Typed " + e.getKeyChar());
    }

    @Override
    public void keyPressed(KeyEvent e) {
        int keyCode =e.getKeyCode();

        if(keyCode == KeyEvent.VK_RIGHT){
            Main.player.moveRight();
        }
        else if(keyCode == KeyEvent.VK_LEFT){
            Main.player.moveLeft();
        }
        else if(keyCode == KeyEvent.VK_UP){
            Main.player.moveUp();
        }
        else if(keyCode == KeyEvent.VK_DOWN){
            Main.player.moveDown();
        }
        //System.out.println("Pressed " + e.getKeyChar());
    }

    @Override
    public void keyReleased(KeyEvent e) {
        int keyCode =e.getKeyCode();
        if(keyCode == KeyEvent.VK_SPACE){
            Main.player.shoot();
        }
        //System.out.println("Released " + e.getKeyChar());
    }
	
	public void createAliens() {
		// larger z is farther from camera
		int farthestRowZ = 230; 
		if (level > 4) {
			farthestRowZ = 110;
		}
		else {
			farthestRowZ = 230 - level*40;
		}
		for (int i = 15*-4; i < 15*4; i+=15) {
			Main.damageables.add(new spaceinvaders3d.Alien(
					new Point3D(i,-5,farthestRowZ), 
					new Point3D(i+10,5,farthestRowZ), 0 ) );
			Main.damageables.add(new spaceinvaders3d.Alien(
					new Point3D(i,-5,farthestRowZ-10), 
					new Point3D(i+10,5,farthestRowZ-10), 1) );
			Main.damageables.add(new spaceinvaders3d.Alien(
					new Point3D(i,-5,farthestRowZ-20), 
					new Point3D(i+10,5,farthestRowZ-20), 2) );
		}		
	}
	
	public void createShields() {
		for (int i=20*-4; i < 20*4; i+= 20) {
			Main.damageables.add(new spaceinvaders3d.Shield(
					new Point3D(i, -2, 50),
					new Point3D(i+4, 2, 50)));		
			Main.damageables.add(new spaceinvaders3d.Shield(
					new Point3D(i, -2, 40),
					new Point3D(i+4, 2, 40)));		
			Main.damageables.add(new spaceinvaders3d.Shield(
					new Point3D(i, -2, 30),
					new Point3D(i+4, 2, 30)));			
		}
	}
	
	public int getLevel() {
		return level;
	}
	
	public void increaseLevel() {
		level++;
	}
	
	private int level = 1;
}
